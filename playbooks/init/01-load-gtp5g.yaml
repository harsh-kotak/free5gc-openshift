# 
# Load GTP5G kernel module
---
- hosts: localhost
  tasks:
  - name: Login
    include_tasks: ../login.yml

  - name: Create ServiceAccount gtp5g-kmod-driver-container
    kubernetes.core.k8s:
      state: present
      apply: yes
      host: "{{ openshift.api_url }}"
      api_key: "{{ k8s_auth_result.k8s_auth.api_key }}"
      validate_certs: no
      definition:
        apiVersion: v1
        kind: ServiceAccount
        metadata:
          namespace: gtp5g-driver
          name: gtp5g-kmod-driver-container

  - name: Create Role gtp5g-kmod-driver-container
    kubernetes.core.k8s:
      state: present
      apply: yes
      host: "{{ openshift.api_url }}"
      api_key: "{{ k8s_auth_result.k8s_auth.api_key }}"
      validate_certs: no
      definition:
        apiVersion: rbac.authorization.k8s.io/v1      
        kind: Role
        metadata:
          name: gtp5g-kmod-driver-container
          namespace: gtp5g-driver
        rules:
        - apiGroups:
          - security.openshift.io
          resources:
          - securitycontextconstraints
          verbs:
          - use
          resourceNames:
          - privileged

  - name: Create RoleBinding gtp5g-kmod-driver-container 
    kubernetes.core.k8s:
      state: present
      apply: yes
      host: "{{ openshift.api_url }}" 
      api_key: "{{ k8s_auth_result.k8s_auth.api_key }}"
      validate_certs: no
      definition:
        apiVersion: rbac.authorization.k8s.io/v1
        kind: RoleBinding
        metadata:
          name: gtp5g-kmod-driver-container
          namespace: gtp5g-driver
        roleRef:
          apiGroup: rbac.authorization.k8s.io
          kind: Role
          name: gtp5g-kmod-driver-container
        subjects:
        - kind: ServiceAccount
          name: gtp5g-kmod-driver-container
        userNames:
        - system:serviceaccount:gtp5g-kmod-demo:gtp5g-kmod-driver-container

  - name: Create DaemonSet gtp5g-kmod-driver-container
    kubernetes.core.k8s:
      state: present
      apply: yes
      host: "{{ openshift.api_url }}"
      api_key: "{{ k8s_auth_result.k8s_auth.api_key }}"
      validate_certs: no
      definition:
        apiVersion: apps/v1
        kind: DaemonSet
        metadata:
          name: gtp5g-kmod-driver-container
          namespace: gtp5g-driver
        spec:
          selector:
            matchLabels:
              app: gtp5g-kmod-driver-container
          template:
            metadata:
              labels:
                app: gtp5g-kmod-driver-container
            spec:
              serviceAccount: gtp5g-kmod-driver-container
              serviceAccountName: gtp5g-kmod-driver-container
              containers:
              - image: quay.io/ferossi/gtp5g-mod-ocp:v4.8
                name: gtp5g-kmod-driver-container
                imagePullPolicy: Always
                command: ["/root/entrypoint.sh"]
                lifecycle:
                  preStop:
                    exec:
                      command: ["/usr/sbin/", "rmmod", "gtp5g"]
                securityContext:
                  privileged: true
